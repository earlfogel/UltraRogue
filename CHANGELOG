February 2025
-------------

update version date

minor fixes to help, identify, cast and pray commands

update to monster selection command-line options. The choices are:
  -ma: all 400+ monsters from 1.0.7
  -mc: just classic monsters from 1.0.2
  -mr: a random selection of monsters (this is the default)

more neutral monsters (neither friendly nor mean)

<CTRL> movement keys don't search when you are being chased

add welcome message for new users


November 2024
-------------

vorpal blades and shiny armor have no effect in very hard games

it's easier to damage protected armor and weapons

better mouse movement on and around doors


October 2024
------------

remove scroll of peace; prayer of peace remains


July 2024
---------

prefer straight line paths for mouse moves (avoid drunkard's walk)


May 2024
--------

better path calculation for mouse moves between rooms

fix: use curses getmaxy() and getmaxx() instead of struct WINDOW internals


April 2024
----------

<ctrl> run commands don't stop to search when you're injured

fix monster saving throws against blessed/cursed sticks

electrification does not affect NOBOLT monsters


March 2024
----------

mouse moves and commands with counts now stop if you fall through a trap door

mouse moves stop if a monster blocks your path

mouse moves were broken on maze levels


February 2024
-------------

better distance calculation when choosing doors with mouse move


January 2024
------------

blessed ring of regeneration not quite as good


December 2023
-------------

Fix snprintf warning in monsters.c

bug fix: dividing monsters were too easy to defeat


November 2023
-------------

Remove last code relating to password for wizard(debug) mode.

Artifacts may lose protection when dipped.


September 2023
--------------

Shiny armor harder to achieve in harder games.


August 2023
-----------

Use 'F' for mouse fights.

Rings use more food in very hard games, but not quite so much.


July 2023
---------

Using the mouse to move between rooms is easier.

Scroll of peace does not affect lucifer.

June 2023
---------

Reduced effect of blessed ring of regeneration.


May 2023
--------

Supress 'illegal command' message when Enter is pressed.

When standing on a trap, you can use the '>' command to trigger it.

Dividing monsters weaken more slowly in harder games.

Fix: encountering hidden traps when using mouse to move.


April 2023
----------

Occasionally monsters wander up from the depths in very hard games.

March 2023
----------

When surrounded, can use mouse to pick a monster to fight.


February 2023
-------------

Rings use more food in very hard games.

Inventory of one item shows more detail.


November 2022
-------------

Ring of regeneration is less effective in hard games.


August 2022
-----------

Dipping doubly-protected items does less damage.


July 2022
---------

Killing Friendly Fiend may unvorp your weapons (among other things).


June 2022
---------

Minor change to status display.


May 2022
--------

Add more mouse actions (pick up and dip).

More accuracy when using mouse to move or fight.


April 2022
----------

Cutcorners option is less favorable to player.

Add prayer of flying.

Tweak to mouse support.

Tweak to how much things scatter when they fall.

Start daemons earlier to fix autosave of first level.


March 2022
----------

Don't stop running if a missile misses you.

Monsters can't frighten you if you can't see them.

Initial support for using mouse to move around the dungeon.

In hard games, your armor is less effective the deeper you go.


January 2022
------------

Add death by misadventure, i.e. killing oneself.

Scroll of peace has less range.


November 2021
-------------

In very hard games you can't re-roll or re-use characters.


October 2021
------------

Fix message when using wand of paralization.


August 2021
-----------

Option to use left-handed movement keys (i.e. adeg <=> hjkl)
Press '[' to undo this for one keypress (e.g. '[e' for eat)


July 2021
---------

Carrying the Wand of Orcus lets you teleport up levels more quickly.

Doubly protected items less likely to explode.

Very hard games are harder:
 - larger swarms and flocks of monsters in early levels
 - fewer armor types available at start of game
 - armor is less effective
 - throne rooms have more and stronger monsters in early levels

Blessed enchantment fix.


June 2021
---------

Player recuperates more quickly while resting.

Begin implementation of 'very hard' difficulty level.


May 2021
--------

Ring of wizardry and scrolls of acquirement and genocide are more
rare in hard games.

Player gets fewer spell/prayer points in normal games.

Vorpal blades more effective against summoning monsters.

Fix: move vorpal blade code to fight.c.

Fix: save/restore resets character type if it gets lost.


April 2021
----------

Make hard games a bit harder deep in dungeon.

More experience gained by killing divided monsters.

More consistent feedback when making shiny armor.


March 2021
----------

Less likely to die of starvation in easy games.

Ring of extra sight prevents blindness.

Fix null pointer dereference after death by petrification
followed by autosave/restore -- wake_monster() returned a
pointer to the monster that killed you, but restore reset
the list of monsters, invalidating that pointer.

Fix: display glitch stealing item from under monster.


February 2021
-------------

Can steal items from underneath monsters.

Preserve hitpoints for dividing monsters.

Allow buffering of fight commands.

Move POWEREAT from do_minor to do_major.

Lembas cure POWEREAT and SUPEREAT.


January 2021
------------

More consistent behavior at the end of long fights.

Fix the secret door display glitch entering a dark room after magic mapping.

Don't autosave when rogue is blind.

Fix - restoring a copied save file would overwrite original on next save


December 2020
-------------

Fix: doctor stops working after save/restore on level with no monsters.

Found permanent phasing cheat.

Blessed ring of levitation protects you from fire traps.

Saved games are resumed by default; use 'urogue -new' to override this.


October 2020
------------

Rogue gets points for genocided monsters.

Friendly monsters don't like being bumped into in hard games.

Blessed rings of wizardry, searching and regeneration are better.

Cursed rings of wizardry and searching are less effective.


September 2020
--------------

Don't autosave after falling through a trap.

Dividing monsters are more vulnerable to vorpal weapons.

Petrifying monsters are more dangerous.

Fix spurious "Illegal command" messages due to saved commands.

Vorpal blades are easier to create.

Blessed genocide not affected by difficulty level.

Fix: stuff you know/guess gets restored after autosave/restore


August 2020
-----------

New option: autosave

Fix: rare crash in do_move when you run into a monster that doesn't exist.

Fix: shiny armor protection against gazing monsters.


July 2020
---------

Support CTRL arrow keys on xterm(ish) terminals.

You can now unwield a weapon by pressing "w-".

Fix gcc -Wextra and -Wformat=2 warnings.

Hidden feature: can cast blessed spells and prayers (at extra cost)
by typing upper-case letters.

New option: noautopickup


June 2020
---------

Fix: artifacts lost below level 99 could never return.

Fix: more varieties of monster appear deep in the dungeon.

You don't lose protected/owned items when resurrected.
In easy games, you don't lose any items when resurrected.

Implement ISSWARM and ISFLOCK in difficult games.

Make shopkeeper optional when using -mr option.

Player heals even more slowly in difficult games.


May 2020
--------

Player heals more slowly in difficult games.

Fix: infinite loop in wanderer() after killing friendly fiend.

Can't start normal games with mithril or hard games with plate armor.

Fix: can't pick up items in trading posts while Friendly Fiend is there.

Fix: bugs tracking the number of items in purse.

Killing Friendly Fiend is safer in easy games, more dangerous in others.

Friendly Fiend only appears in some "-mr" games.


April 2020
----------

Fix: dropped items can't land on doors under monsters.

do_minor() #17 excludes ring/POWERSTR bonus

Rogue should be more careful when injured.

Fix: use fopen() in binary mode for score file and saved character file
to prevent file corruption issues on Windows.

Implement CANSPORE.


March 2020
----------

Ignore special keys when waiting for "any character".
Otherwise attempts to scroll at the end of a game
cause it to end suddenly.

Falling items may scatter a bit further.

Falling items may (rarely) land under the rogue.

Reset maxpack when difficulty level changes.

Fix: sometimes rooms don't light up when fire monsters appear or enter.

Fix the ancient disappearing door bug.

Fix the ancient long messages mess up the dungeon bug.

Clear "which item" prompt after putting on rings.

Display usage message if invalid command-line option is used.

Don't rewrite score file unless it changes.

Stepping on a trap clears the type-ahead buffer (save_ch).

Fights last longer deep in the dungeon (min_fight).

Fix null pointer dereference in look().


February 2020
-------------

Updated handling of command-line arguments.

Fix: change odds of cursed/blessed items when difficulty level changes.

Fix: make sure at least one wandering monster is available on level 1.

Fix: fighting monsters that divide when hit.

Fix: fiery monsters only light rooms if we're in them.

Limit how many items scavengers can carry (based on their experience level).

Save/restore *_guess arrays.

In 'C'all command, press <return> to erase previous guess.

Code cleanup in state.c: switch from ur_alloc/ur_free to ALLOC/FREE

Throne rooms less dangerous early in the game.

Fix: use curses input routines instead of getchar()

Fix: sometimes light room when new monsters appear.

Fix: integer arithmetic bug healing in difficult games

Fix: at some ability levels ring of regeneration would slow healing


January 2020
------------

Monsters can't summon a unique if it's already there.

Add a few monsters to list of classic monsters (-mc)
and removed Friendly Fiend.

You'd better stop fighting if you start suffocating.

You are move vulnerable to magical attacks in hard games.

Save key pressed in wait_for() to use as next command.

Player gains spells/prayers more slowly in hard games.

Better tracking of injuries sustained in long fights.

Tweak to chose character screen.

Health state shows when player stats are low.

Fix: don't fight when HP too low (change int to float).

Fix: waiting for new monster in long fights.

Support for CTRL and ARROW keys in get_dir().

Fix multiple glitches when swapping places with friendly monsters.

Moving into a monster while phasing now swaps places with it.

Fix: don't light room when new monsters appear.

Friendly monsters still guard their treasure.


December 2019
-------------

Vorpal blades affect NOMETAL monsters.

Blessed protection scrolls are better than normal.

Can press <ESCAPE> to interrupt fights or repeat commands.

Fix: random dots in dark rooms when scavenger picks stuff up.

Fix: level inventory in debug mode.

Change debug mode 'floor map' command from ^F to ^A
to avoid conflict with ^F 'serious fight' command.

While phasing, the first step of a run can move you into a wall.

Blessed protection makes armor shiny.

Shiny armor deflects the gaze of gazing monsters.

Player heals more slowly in difficult games.

Fix ^C wizard mode command, which conflicted with SIGINT.

Fix: save/restore of canwizard.

Enchanting stuff is riskier in hard games.

Option to show cursor while playing (showcursor).

Blessed 'magic hitting' improved.

Stop fighting when you change experience levels.


November 2019
-------------

Option to let players (and monsters) turn sharper corners.

Bad luck fades over time.

urogue.bat and urogue.sh have example of setting options.

Thieves can steal from shops.

If friendly monsters notice your attempt to steal, they get angry.

Can use SROGUEOPTS environment variable to set difficulty level.

Can change difficulty level on the fly.

Score adjusted based on lowest difficulty level used.

'S'ave won't clobber an existing file.

Don't stop to pick things up in searching runs.

Make swings connect sometimes when fights are uneven.

Limit how many times a monster can divide.

New CTRL('F') command fights monsters that are usually best to avoid.

Don't pick stuff up during searching runs.

Fix: show cursor when needed for teleport control.

Using a blessed enchantment scroll on a stick/wand adds charges
and blesses it.

Using a blessed wand of drain life is less draining.

Status line shows when Debug Mode is on.

Fix: initialize buffer before calling get_str()
(fixes bugs in Call command and scroll of acquirement)

Since monsters get a boost once you make it past level 80,
you now get more experience for killing them.

Fix: scoreboard ordering of repeat games.

Fix: <return> is harmless when guessing what things are.

Serious fights continue even if you're asleep or confused.


October 2019
------------

It's harder for monsters to shatter protected crystalline armor
in hard games -- the protection is lost instead.

Fix off-by-one error in pick_one().

Show luck on options screen.

Restore abilities prayer can restore luck.

Friendly monsters don't shoot at you.

Exploding rings only hurt if you're wearing them.

Things don't explode as early when blessed enchantment is overused.

Greedy monsters don't chase you if they're also friendly.

Drop multiple items, e.g. 10d to drop 10 food rations.

Can combine -s and -w command-line options to see game IDs.

Fix SIGINT handling on Windows.

Fix null pointer dereference in do_zap().

Fix infinite itch.

Fix most gcc -Wextra issues.

Fix the ancient moving invisible monster space bug.

Don't show top scores unless the user actually scores some points.

Support <SHIFT> and <CTRL> arrow keys where terminal makes them available.

Use %APPDATA%/urogue folder on Windows.

Bumping into a friendly monster doesn't start a fight.

Change help for 'S' to: Save game and exit.


September 2019
--------------

Special abilities for gods.

Can genocide shopkeeper, quartermaster and yourself, if you dare.

Don't fight friendly monsters ('f' and 'F' commands).  Hitting a friendly
monster makes them decidedly unfriendly.

Don't show bag letter when adding item to purse, to avoid confusion
with revised 'A'pply command.

Protected crystalline armor may shatter in hard games.

Loss of intelligence or wisdom is temporary in easy games,
and only sometimes permanent in regular games.

Applying artifacts in hard games is a bit safer.

Wizard (software developer) can change difficuly level.

Friendly monsters don't chase you.

Skip most friendly monsters at runtime so we don't have to edit monsdata.c.

New -mm command-line option to include more monsters.

Make scroll of peace less powerful.

Don't show score if developer/wizard mode was used.

Fewer "breaks free from the hold" messages.

Make the middle levels more interesting.

Save/restore now works in trading posts.


August 2019
-----------

Make ^R (refresh command) clear window, then refresh.

Adjust food value based on window size (from 1.0.7)
so food lasts longer in larger dungeons.

Fix misaligned columns on scoreboard when scores are large.

Do away with libsrogue, stat.h, pwd.h and encread/encwrite routines.

Cleanup some gcc "may be used uninitialized" warnings.

Blessed potion of healing slightly improved.

New scroll of peace - calms monsters around you.

Clerics can pray for light and peace.

Fix: init_weapon() now sets object type to WEAPON

Blessed scroll of genocide improved.

Can apply artifacts from within purse.

Monsters can't steal Claimed objects, even on the deepest levels.

Gelatinous blue horror changed to 'H' and stone gargoyle to 'G'.

Move to gender-neutral language.

If you lose the Magic Purse, it gets recreated on a future level.

Casting spells and praying repeatedly (via repeat counts) is a bit more
efficient -- it remembers the previous spell or prayer.

Occasionally monsters are not hostile, based on player's charisma
and monster's (LOW|MED|HIGH)FRIENDLY attributes.

Removed old flush and terse options.

New option to choose type of run (doorstop).

New command-line options to choose level of difficulty (-easy and -hard).
Easy:
 - pack can hold more items
 - players start out with more stuff
 - reduce damage for players with thick skin (ie. s_arm<10).
 - fewer traps
 - fewer cursed items
 - less likely to be summoned to a throne room
Hard:
 - reduce benefit of high armor class
 - can't start game with best armor
 - artifacts are more dangerous
 - fewer blessed items
 - more likely to be summoned to a throne room


July 2019
---------

When choosing which monsters to use in a game, make sure to
include monsters summoned by other monsters we include.

Workaround: doctor daemon still dies sometimes, so restore will
recreate it.

Fix: ring of sustain ability (etc.) don't blow up when enchanted.

Can enter wizard mode when restoring a game (for debugging).

Improve accuracy of id_monster().

Make genocide scroll more rare.

If there's no food on the first two levels, there will be on the third.

Bumping into a wall also searches for secret doors.

Shops now have shopkeepers.

Chance of hitting high level opponents improved from none to slim.
This fixes a problem where players with very good armor would never be hit,
making the deepest dungeon levels too easy.

Use wgetch() for user input and let curses deal with escape sequences
(eg. arrow keys), as this is more portable.

Removed some quaint old code (shell escapes, load average checks,
wizard password file).

If urogue can't access a central score file, put it in the users's home
directory instead.

Stolen artifacts sometimes reappear if thief disappears, and
occasionally scavengers drop stuff when they disappear.

Scorefile, saved characters and save/restore now work on Windows.

Monsters don't get a saving throw against blessed sticks/wands
or the Sceptre of Might.

Can unwield a weapon.

Can arrow up and down when setting options.

Fix: reset food_left if it gets completely out of whack.

Fix: new health status display updates properly.

Supereat ends, after a while.


June 2019
---------

'~' command shows experience needed to reach next level, as per 1.0.7.

Fix: save/restore of doctor daemon sometimes failed.

Make backspace work when typing filenames and options.

Show blessed/cursed status of food and rings when itemizing pack
when game ends.

Fix: reset keyboard state when restore of saved game fails.

Swapped 'c' and 'C' commands, as per 1.0.7.

rip.c: show what happened just before you died.

Gain ability potions are more rare, as per 1.0.7.

When running, <shift><dir> acts like <ctrl><dir> used to
(run ends before you run into things).
Also, <ctrl><dir> runs now alternate searching and moving.

In genocide(), truncate long names in list so they don't wrap.
In genocide(), press 'b' to back up and show list again,
press 'q' or ESC to exit.

If there are fewer than NLEVMONS*100 monsters, we'll run out of new
monsters before we run out of levels.  So space them out a bit more.
Conversely, if there are too many monsters, we show new monsters more
often or we'll never see them all.

Can 'm'ove through monsters when phasing.

Try harder to find a place for dropped items.

Can't fight when diseased or infested ('f' and 'F' commands).

Once activated, the Silmaril maps new levels automatically.

Less chance of being sent to a throne room when you go up a level.

Backport monster flags from 1.0.3, and bumped the
t_flags and m_flags arrays from 10 and 4 to 16 each.
This lets new monsters have new abilities and lets us
add new flags (i.e. CLASSIC).

Now includes most monsters from 1.0.3 with command-line options
to choose which ones to use:
  -mc: classic monsters from 1.0.2
  -mr: a random selection of monsters
  -ma: all 300+ monsters
  -mm: classic monsters plus lots of random extras
The default is classic monsters plus a few random extras.

Defined a few new constants in rogue.h so array sizes aren't hard
coded in multiple places (NT_FLAGS, NM_FLAGS, NMSGS, NFINGERS).

Show blind/diseased/infest etc. state in status bar.

Implement
ISLARGE, ISSMALL, ISFAST, CANFLY, CANTRAMPLE, CANSWIM, DRAINBRAIN, DRAINWISDOM, NOMETAL


May 2019
--------

'F' command now fights a group of monsters.  I.e., when the monster you're
fighting dies, it picks another and keeps fighting as long as there's a
monster in reach.

Fewer interruptions (and fewer messages) when fighting ('f' and 'F' commands).  
In particular, you don't get tired of fighting as quickly, and you don't stop
fighting when zapped, unless the bolt causes damage.

Nymphs can no longer curse protected items.

Once activated, the Phial lights up new levels automatically.

Magic mapping shows secret doors as '&'.  This works around a bug where
magic mapping released monsters from treasure rooms.

Scoreboard now shows which entry is current run, if you made it into the
top 10.

Magic and prayer points slowly regenerate when not hungry or hurt.

'x' command to rest (same as '.', but left-handed)
'g' command to move right (same as 'l', but left-handed)

'f/F' commands avoid quartermaster and monsters that divide when hit.

If a 'F'ight ends quickly because there are no more monsters in reach,
wait a bit in case others come in range (if not hurt or hungry).

Don't stop 'F'ighting when hit by a second monster.

Enchanted armor offers some protection from magical attacks.

Fixed calculation of how much mithril protects against magic.

Create a unique ID for each game.  Users can restart saved games over and
over (by copying the save file), but each game only appears in the
scorefile once.

Warn player each turn while suffocating.

Increase chance of finding secret doors (less typing).

Scroll of genocide shows which monsters are already gone
(e.g. due to earlier scroll of genocide).

'd'rop multiple food at once, like arrows and rocks.

Fights end when we recover from being held, paralized, etc. instead
of at the start (to reduce the number of annoying messages).

Fix: half the time find_slot was called with arguments in the wrong order.

Removed wizard scorefile commands from rip.c, and replaced
it with program to delete lines from score file (scorefile.c).


April 2019
----------

Fix: save/restore favorite fruit, number of items in pack and bag.

Check that save file is complete, because sometimes it isn't (due
to gcc address sanitizer)

Add support for arrow keys (via ANSI escape sequences, not curses, sigh).

Protected crystaline armor doesn't shatter.

Stop 'f'ighting when hit by a second monster (used to be when attacked).

Save/restore which monsters are available (e.g. not genocided).

Fixed a use-after-free error in chase(), using position after monster dies.
Fixed a use-after-free error in runners(). If the next monster in the list
dies (eg. after being zapped by the current monster) we reset the pointer
to the next monster (nitem). Initialize t_quiet in new_monster().
Thanks valgrind.


March 2019
----------

Backported and enhanced save/restore code from urogue 1.0.7.  Also daemon
code as it's needed for save/restore.  I.e., ported save.c, state.c and
daemon.c from 1.0.7, with changes to many other files.

Made evil sorceress more vulnerable (change AC from -16 to -10 as in 1.0.7).

When enchanting weapons, keep hit and damage closer together.

When game ends, use space to page through final info, rather
than alternating space and return.

When fighting, reduce number of "bounce" messages from zapped bolts.
Also, quit fighting when fainting from hunger.

Cleanup unused code in pack.c.

Plugged some memory leaks.  E.g., in new_level() monsters from old level
were freed, but the contents of their packs were not.


February 2019
-------------

Added ',' command to pick up an object


January 2019
------------

Artifacts:

Trying to invoke an artifact, and failing, may cause minor or major harm.
 - reduced the chance of minor bad effects
 - removed major bad effects

Parasites:

Originally, parasitic infestation could only be cured by a cure disease
scroll.  Now infestations clear up on their own (like diseases, but more
slowly).

Fighting:

When using 'f' or 'F' commands, don't ask for a direction if there's only
one monster in reach and visible (to reduce typing and wrist strain).


November 2018
-------------

Electrification:

When you read a scroll of electrification, nearby monsters are damaged for 
several turns.  This is done by iterating through the monster list.  But if
one dies, it gets removed from the list and the 'next' pointer becomes
invalid, leading to a segmentation fault.  So we save it in tmp_item,
temporarily.

$ diff -u command.c.bak command.c
--- command.c.bak       2002-04-28 09:41:01.000000000 -0600
+++ command.c   2018-11-22 14:18:09.990385258 -0600
@@ -509,15 +509,18 @@
        if (on(player, ISELECTRIC)) {
            int lvl;
            struct linked_list *item;
+           struct linked_list tmp_item;
            struct thing *tp;

            for (item = mlist; item != NULL; item = next(item)) {
                tp = (struct thing *) ldata(item);
-               if (DISTANCE(tp->t_pos.y, tp->t_pos.x, hero.y, hero.x) < 5)   {
+               if (tp && DISTANCE(tp->t_pos.y, tp->t_pos.x, hero.y, hero.x) < 5) {
                    if ((tp->t_stats.s_hpt -= roll(2,4)) <= 0) {
                        msg("The %s is killed by an electric shock.",
                                monsters[tp->t_index].m_name);
+                       tmp_item.l_next = item->l_next;
                        killed(item, TRUE, TRUE);
+                       item = &tmp_item;
                        continue;
                    }
                    lvl = tp->t_stats.s_intel - 5;

Wizard mode:

Originally wizard mode required typing a null character as a command-line
argument to urogue (and typing a password), but that's too hard, so you can
now use 'urogue -d' (for debug) instead.


Earlier
-------

 - pack.c, weapons.c, sticks.c
   (delay cleanup of items until we're finished with them,
    i.e. after they've been thrown or dropped)

 - monsters.c
   initialize and use flags correctly

 - save.c
   Save and restore don't work in modern operating systems.
   They used a hack (save would dump all the program's memory to disk;
   restore would overwrite the running image (code and data) with the
   old image).

 - init.c
   Write strings to buffers instead of pointers.
